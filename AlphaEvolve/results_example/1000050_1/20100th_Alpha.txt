def Setup():
  v13 = gaussian(0.806825, 0.358535, n_features)
  v24 = gaussian(-0.405189, 0.449453, n_features)
  v23 = uniform(-0.732866, -0.38243, n_features)
  s18 = -0.793105
  s9 = uniform(-0.448891, 0.390784)
  m13 = uniform(0.631397, 0.0313187, (n_features, n_features))
  v29 = uniform(-0.917728, -0.0539712, n_features)
  v22 = uniform(-0.3758, -0.671747, n_features)
  v2[0.383351] = -0.180699
  s24 = gaussian(0.126525, 0.878666)
def Predict():
  v5 = mean(m7, axis=1)
  v13 = bcast(s16)
  v3 = 1 / v19
  s13 = arccos(s7)
  v16 = dot(m24, v7)
  s23 = minimum(s16, s15)
  v19 = get_column(0.424583)
  s7 = 1 / s26
  v17 = bcast(s23)
  s1 = exp(s18)
  v13 = get_row(0.659123)
  s25 = exp(s22)
  s25 = s15 * s23
  s21 = get_scalar(0.322693, 0.979847)
  s29 = std(m1)
  v28 = get_column(0.473778)
  s13 = arcsin(s2)
  v26 = 1 / v16
  m1 = m15 * m20
  s19 = s12 / s24
  v11 = v23 + v13
  s18 = correlation(v4, v2, 0.734202)
  v26 = bcast(s14)
  s29 = s17 / s3
  v4 = abs(v1)
  m11 = maximum(m14, m3)
  v6 = std(m14, axis=1)
  s20 = arctan(s24)
  s3 = covariance(v5, v16, 0.0486173)
  m2 = matmul(m4, m7)
  s23 = abs(s14)
  s17 = correlation(v2, v28, 0.799238)
  m1 = m16 / m22
  v29 = v18 + v26
  v26 = heaviside(v19, 1.0)
  m16 = uniform(-0.461534, 0.691237, (n_features, n_features))
  v13 = v21 + v5
  m1 = bcast(v26, axis=1)
  m20 = transpose(m20)
  NoOp()
  s24 = s29 * s4
  v14 = v21 / v12
  v5 = mean(m15, axis=1)
  s7 = tan(s22)
  m4 = uniform(-0.897386, 0.0720221, (n_features, n_features))
  s3 = std(m0)
  v6 = v17 - v27
  v1 = s27 * v0
  s2 = log(s17)
  s25 = norm(m7)
  v10 = v8 * v26
  s16 = norm(m6)
  v20 = bcast(s0)
  m10 = 1 / m5
  s21 = sin(s1)
  m15 = m0 / m24
  s18 = mean(m7)
  v3 = get_column(0.213826)
  v29 = v27 / v22
  v6 = abs(v24)
  m18 = transpose(m14)
  v27 = maximum(v16, v27)
  s20 = minimum(s5, s20)
def Learn():
  v20 = std(m17, axis=1)
  s12 = norm(m1)
  v7 = dot(m23, v17)
  m21 = m22 + m20
  v14 = get_row(0.52794)
  s5 = exp(s16)
  s18 = arccos(s25)
  s9 = norm(m18)
  v7 = minimum(v4, v7)
  s20 = dot(v9, v11)
  v8 = v10 * v1
  s2 = arcsin(s18)
  s7 = sin(s14)
  s12 = tan(s17)
  v26 = minimum(v2, v3)
  m10 = bcast(v21, axis=1)
  s27 = 1 / s23
  m11 = m8 / m23
  m20 = uniform(0.659526, -0.97596, (n_features, n_features))
  s13 = arctan(s16)
  v8 = 1 / v0
  s29 = mean(m10)
  s28 = arctan(s29)
  m4 = maximum(m16, m24)
 