def Setup():
  m1 = gaussian(-0.0705287, 0.00691104, (n_features, n_features))
  s26 = gaussian(0.169164, 0.611642)
  s2 = gaussian(-0.270734, 0.1089)
  s16 = -0.211469
  m6[0.139644, 0.489279] = -0.760466
  s24 = gaussian(0.754041, 0.0736414)
  m3 = uniform(-0.0760972, 0.614831, (n_features, n_features))
  s10 = gaussian(-0.227687, 0.152011)
  s5 = -0.902526
  v5[0.684221] = -0.603449
  v12[0.842087] = 0.460772
  v29 = uniform(0.573898, 0.254871, n_features)
  s22 = gaussian(-0.760383, 0.525706)
  s5 = -0.518452
def Predict():
  v14 = v26 * v4
  NoOp()
  v11 = 1 / v9
  s20 = arcsin(s29)
  m15 = uniform(-0.779752, 0.270189, (n_features, n_features))
  v13 = std(m9, axis=1)
  m14 = matmul(m23, m22)
  m18 = abs(m11)
  m16 = minimum(m24, m4)
  s24 = exp(s6)
  s13 = covariance(v8, v7, 0.967591)
  s3 = mean(m21)
  s17 = sin(s28)
  v18 = norm(m5, axis=0)
  s27 = cos(s13)
  v6 = mean(m2, axis=1)
  v16 = dot(m8, v5)
  s14 = arccos(s14)
  v25 = v28 / v2
  v2 = mean(m15, axis=1)
  s14 = s3 - s2
  m23 = bcast(v6, axis=0)
  v17 = get_row(0.831859)
  m19 = m4 - m22
  v23 = v11 * v4
  m7 = maximum(m5, m16)
  s20 = heaviside(s19, 1.0)
  s9 = tan(s27)
  v21 = minimum(v12, v12)
  v4 = v24 / v21
  m21 = 1 / m24
  m6 = s11 * m1
  s5 = sin(s19)
  s1 = arctan(s5)
  s5 = arctan(s14)
  s15 = arctan(s27)
  m4 = m4 / m24
  v9 = maximum(v0, v17)
  s27 = correlation(v4, v25, 0.857131)
  s7 = sin(s26)
  v28 = bcast(s13)
  s22 = minimum(s29, s4)
  s5 = mean(m10)
  m14 = m14 - m24
  v21 = norm(m12, axis=1)
  s3 = dot(v4, v27)
  m12 = m6 / m14
  m13 = maximum(m24, m19)
  m18 = m12 + m20
  s4 = sin(s20)
  s26 = 1 / s13
  s19 = norm(m7)
  s11 = arctan(s8)
  v23 = norm(m9, axis=1)
  s28 = log(s17)
  m23 = transpose(m8)
  m2 = m14 - m22
  s13 = minimum(s15, s28)
  s7 = covariance(v8, v29, 0.929265)
  v5 = v10 - v8
  v15 = v20 / v23
  v10 = v19 * v12
  m1 = heaviside(m23, 1.0)
  NoOp()
  s26 = exp(s24)
def Learn():
  v8 = get_row(0.708319)
  v21 = minimum(v17, v10)
  m3 = minimum(m21, m24)
  v5 = norm(m2, axis=1)
  s7 = sin(s4)
  m16 = bcast(v12, axis=0)
  v7 = mean(m10, axis=1)
  s21 = arcsin(s24)
  s24 = std(m4)
  s19 = get_scalar(0.697993, 0.204988)
  v5 = bcast(s9)
  s5 = cos(s10)
  m21 = matmul(m16, m1)
  v11 = norm(m19, axis=1)
  m17 = uniform(0.745279, -0.788306, (n_features, n_features))
  NoOp()
  m17 = m16 * m10
  s14 = mean(v17)
  s21 = s8 * s24
  m20 = m13 * m7
  v23 = std(m15, axis=1)
  v8 = abs(v10)
  s20 = s7 + s1
  v23 = heaviside(v9, 1.0)
  v29 = dot(m1, v19)
  s23 = s10 / s7
  v27 = v23 - v11
  s5 = std(v13)
  v14 = v8 - v22
  s7 = std(m8)
  m9 = bcast(v24, axis=1)
  s25 = arctan(s5)
  s22 = s2 - s11
  s6 = s10 + s16
  s11 = heaviside(s21, 1.0)
  s22 = tan(s4)
  m15 = minimum(m20, m11)
 