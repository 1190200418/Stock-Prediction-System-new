def Setup():
  m5 = gaussian(-0.614827, 0.381862, (n_features, n_features))
  m2 = gaussian(-0.223933, 0.985689, (n_features, n_features))
  s3 = -0.286193
  m24 = gaussian(0.629722, 0.855799, (n_features, n_features))
  m4 = uniform(0.342985, -0.513604, (n_features, n_features))
  m2 = gaussian(-0.586485, 0.460038, (n_features, n_features))
  m16 = gaussian(0.97321, 0.54792, (n_features, n_features))
  v16 = uniform(0.861889, -0.685743, n_features)
  v6 = gaussian(-0.352965, 0.44886, n_features)
  m20 = uniform(-0.397497, 0.834055, (n_features, n_features))
  m19[0.375275, 0.0685997] = -0.0358387
def Predict():
  v22 = bcast(s13)
  s6 = s26 * s26
  s28 = tan(s25)
  m23 = abs(m1)
  v22 = v14 - v17
  s19 = abs(s19)
  s13 = s11 + s26
  s13 = minimum(s9, s24)
  m15 = bcast(v9, axis=0)
  v4 = mean(m12, axis=1)
  s16 = exp(s12)
  s26 = dot(v14, v26)
  m11 = m5 / m8
  s22 = s10 / s21
  v14 = v23 * v10
  v1 = v22 + v29
  s27 = mean(v5)
  m9 = bcast(v11, axis=0)
  m12 = heaviside(m18, 1.0)
  s21 = covariance(v1, v25, 0.123656)
  s5 = 1 / s19
  s4 = covariance(v17, v17, 0.302892)
  m17 = outer(v21, v13)
  v6 = uniform(-0.668343, -0.747883, n_features)
  v17 = v27 / v25
  s20 = sin(s27)
  v8 = bcast(s24)
  m18 = maximum(m14, m9)
  m3 = m18 * m2
  NoOp()
  NoOp()
  s9 = mean(m2)
  s28 = mean(v14)
  s25 = get_scalar(0.0589315, 0.53845)
  v27 = norm(m5, axis=1)
  m21 = minimum(m16, m22)
  v12 = v4 * v26
  m15 = bcast(v24, axis=0)
  s25 = minimum(s29, s24)
  v9 = dot(m16, v22)
  m24 = 1 / m22
  s29 = norm(m19)
  v7 = dot(m10, v13)
  s28 = maximum(s9, s24)
  m2 = m18 - m12
  s9 = dot(v9, v6)
  m20 = outer(v14, v28)
  s22 = arccos(s17)
  v27 = maximum(v17, v8)
  v23 = maximum(v28, v24)
  s11 = abs(s13)
  s11 = get_scalar(0.812755, 0.819927)
  v20 = mean(m10, axis=1)
  m16 = m20 - m7
  s11 = heaviside(s12, 1.0)
def Learn():
  s8 = s3 + s14
  v16 = s7 * v9
  s1 = exp(s8)
  s15 = dot(v27, v15)
  s26 = arctan(s2)
  v8 = get_column(0.431496)
  s28 = covariance(v29, v7, 0.796987)
  s27 = mean(m7)
  s21 = s22 * s3
  s25 = s26 / s0
  s16 = heaviside(s21, 1.0)
  s10 = exp(s21)
  v16 = get_row(0.306382)
  s25 = exp(s10)
  s26 = std(v18)
  s21 = minimum(s28, s22)
  s25 = s20 * s21
  s28 = s5 / s6
  s25 = s22 / s2
  m6 = outer(v6, v2)
  v9 = abs(v15)
  s2 = mean(m0)
  v23 = bcast(s28)
 