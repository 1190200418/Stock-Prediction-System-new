def Setup():
  s27 = gaussian(-0.92013, 0.645248)
  v12[0.596133] = -0.408616
  s13 = uniform(0.154907, -0.740971)
  v8 = uniform(-0.80816, 0.684949, n_features)
  v23 = uniform(-0.487677, 0.895304, n_features)
  s18 = 0.326232
  v5 = uniform(-0.121341, -0.416594, n_features)
  s15 = uniform(-0.821556, -0.367695)
  s3 = -0.784965
  s8 = uniform(-0.279887, -0.93728)
  v9 = gaussian(-0.750086, 0.327047, n_features)
  v24 = gaussian(-0.480331, 0.274376, n_features)
  m6 = gaussian(-0.313998, 0.248056, (n_features, n_features))
  s16 = gaussian(-0.781157, 0.0377247)
  m11 = gaussian(-0.0872302, 0.553568, (n_features, n_features))
def Predict():
  s9 = norm(m2)
  m6 = s7 * m6
  s20 = exp(s22)
  v9 = norm(m4, axis=1)
  s8 = abs(s11)
  s22 = arcsin(s15)
  s6 = s27 + s16
  s12 = s11 - s3
  m10 = matmul(m18, m23)
  s5 = s5 / s24
  NoOp()
  v22 = mean(m8, axis=1)
  m20 = uniform(0.804172, 0.860253, (n_features, n_features))
  s23 = 1 / s7
  s9 = arccos(s15)
  v24 = v26 - v13
  m23 = minimum(m3, m5)
  v29 = maximum(v23, v22)
  s11 = minimum(s26, s14)
  v23 = std(m24, axis=1)
  s19 = covariance(v21, v26, 0.95591)
  m24 = maximum(m21, m4)
  m6 = m22 / m24
  v13 = v17 + v16
  s21 = sin(s27)
  s12 = log(s4)
  s26 = tan(s4)
  v10 = maximum(v2, v7)
  s15 = s13 / s23
  v23 = heaviside(v19, 1.0)
  v2 = std(m1, axis=1)
  v15 = norm(m24, axis=1)
  m21 = abs(m15)
  s24 = norm(m23)
  s24 = std(m11)
  s5 = norm(v14)
  v3 = norm(m5, axis=1)
  m19 = abs(m12)
  v9 = maximum(v17, v10)
  s8 = std(v0)
  s14 = norm(v18)
  s23 = norm(m10)
  m21 = m20 / m19
  v7 = get_row(0.46697)
  s10 = get_scalar(0.754833, 0.635385)
  v6 = uniform(-0.654086, -0.554336, n_features)
  v21 = v27 + v11
  v1 = bcast(s5)
  m4 = heaviside(m0, 1.0)
  m23 = minimum(m2, m15)
  s7 = std(m8)
  s9 = s6 - s4
  v22 = bcast(s0)
  v22 = v21 + v6
  s20 = norm(v2)
  NoOp()
  m6 = maximum(m18, m17)
  s28 = cos(s14)
  s21 = mean(v15)
  v23 = v4 / v5
  v12 = minimum(v13, v29)
  v29 = 1 / v29
  s5 = minimum(s5, s13)
  v9 = get_column(0.130493)
  s1 = arccos(s4)
  s14 = s25 - s16
  v1 = abs(v28)
  v6 = norm(m6, axis=0)
  m5 = m9 / m10
  s7 = s27 - s22
def Learn():
  v5 = bcast(s10)
  m1 = m24 * m5
  m16 = heaviside(m1, 1.0)
  v10 = get_column(0.687583)
  s17 = arccos(s13)
  m18 = bcast(v2, axis=0)
  v20 = v17 + v22
  m18 = maximum(m1, m7)
  m18 = maximum(m7, m7)
  s11 = exp(s20)
  s24 = std(m22)
  v8 = s22 * v19
  s1 = dot(v5, v10)
  m14 = matmul(m13, m20)
  s2 = arctan(s13)
  s11 = tan(s16)
  s11 = arcsin(s14)
  v29 = minimum(v0, v8)
  s10 = covariance(v21, v19, 0.427597)
  s25 = arcsin(s2)
 