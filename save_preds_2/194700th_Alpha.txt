def Setup():
  s5 = gaussian(-0.33626, 0.861107)
  s19 = gaussian(-0.646011, 0.900861)
  s6 = 0.141267
  s25 = -0.929508
  v24 = gaussian(-0.563627, 0.699589, n_features)
  s13 = uniform(0.634684, -0.247797)
def Predict():
  s18 = abs(s23)
  s26 = s3 + s28
  v10 = 1 / v22
  s18 = log(s0)
  v19 = norm(m0, axis=1)
  s4 = abs(s2)
  m8 = maximum(m17, m11)
  s6 = tan(s7)
  v16 = TS_row_rank(s18)
  s25 = std(v12)
  s6 = s17 - s19
  s21 = s3 * s11
  NoOp()
  s2 = cos(s12)
  s28 = covariance(v28, v16, 0.653939)
  s3 = s6 * s0
  v29 = heaviside(v12, 1.0)
  m16 = s11 * m10
  s1 = tan(s6)
  v27 = v5 * v20
  s23 = TS_rank(s12)
  s5 = log(s13)
  m10 = transpose(m24)
  s8 = abs(s21)
  s17 = log(s23)
  s11 = norm(m11)
  s15 = dot(v7, v17)
  s5 = relation_rank(s19)
  s24 = TS_rank(s1)
  m12 = maximum(m8, m20)
  s28 = sin(s14)
  v29 = heaviside(v16, 1.0)
  s9 = log(s17)
  s16 = s19 - s10
  m20 = outer(v12, v4)
  s13 = mean(m17)
  s27 = 1 / s11
  s3 = previous_rank(s6)
  m6 = bcast(v29, axis=1)
  s13 = mean(v21)
  s16 = norm(m8)
  m12 = 1 / m7
  v26 = get_column(0.97762)
  s19 = get_scalar(0.950129, 0.237406)
  s23 = relation_rank(s19)
  v16 = heaviside(v16, 1.0)
  m12 = bcast(v26, axis=0)
  s27 = exp(s20)
  v4 = v25 + v12
def Learn():
  s5 = abs(s13)
  s19 = exp(s26)
  m19 = heaviside(m0, 1.0)
  s1 = minimum(s26, s27)
  v21 = s14 * v0
  m5 = 1 / m19
  v25 = get_column(0.07632)
  s13 = s15 + s18
  m15 = heaviside(m24, 1.0)
  s15 = covariance(v16, v6, 0.127074)
  m12 = heaviside(m13, 1.0)
  m11 = transpose(m18)
  v15 = std(m8, axis=1)
  s13 = minimum(s13, s3)
  v8 = norm(m12, axis=1)
  v29 = get_column(0.964037)
  s17 = std(v4)
  s14 = heaviside(s4, 1.0)
  m5 = matmul(m7, m23)
  m22 = m18 / m10
  s17 = mean(v19)
  s23 = cos(s18)
  s23 = heaviside(s6, 1.0)
  m18 = m6 - m10
  v28 = uniform(-0.281354, 2.34665, n_features)
  s28 = get_scalar(0.255323, 0.302416)
  s27 = get_scalar(0.198709, 0.465656)
  v5 = bcast(s1)
 