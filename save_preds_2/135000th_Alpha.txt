def Setup():
  m12 = gaussian(-0.609985, 0.827559, (n_features, n_features))
  s6 = 0.300059
  s2 = uniform(-0.0605102, 0.339051)
  m9 = uniform(0.638851, -0.419225, (n_features, n_features))
  m22 = uniform(-0.22409, -0.512928, (n_features, n_features))
  v7 = uniform(0.0658318, -0.115107, n_features)
  s13 = -0.155859
  v18[0.794646] = 0.0105669
  m18[0.911307, 0.719446] = 0.825234
  s14 = gaussian(-0.287656, 0.229626)
  m20[0.61381, 0.0665859] = -0.102854
  s11 = uniform(-0.501584, 0.424088)
  m4[0.780381, 0.411916] = 0.192135
  v14 = uniform(-0.698006, -0.933152, n_features)
  m19[0.771295, 0.238929] = 0.243234
def Predict():
  s24 = s3 + s3
  s4 = arctan(s20)
  m16 = maximum(m9, m0)
  s17 = relation_demean(s13)
  m19 = bcast(v25, axis=1)
  m4 = m24 * m21
  v16 = bcast(s5)
  v6 = norm(m24, axis=0)
  s27 = exp(s13)
  s5 = s17 * s16
  s16 = mean(v29)
  v19 = 1 / v4
  s14 = TS_rank(s16)
  s14 = relation_demean(s28)
  m17 = abs(m17)
  m22 = uniform(-0.270508, 0.0434675, (n_features, n_features))
  v15 = v5 * v17
  v3 = maximum(v26, v25)
  m11 = 1 / m2
  m14 = m9 / m16
  m15 = transpose(m6)
  v12 = norm(m11, axis=0)
  v18 = bcast(s2)
  s1 = tan(s24)
  s13 = dot(v23, v27)
  s4 = arcsin(s19)
  v28 = v11 * v10
  s2 = arcsin(s22)
  v21 = dot(m0, v7)
  s29 = norm(v19)
  s12 = s20 - s23
  s29 = maximum(s22, s25)
  s3 = get_scalar(0.699785, 0.851497)
  v27 = get_row(0.274698)
  s19 = log(s21)
  v16 = 1 / v4
  v10 = heaviside(v24, 1.0)
  s2 = mean(m18)
  m15 = m5 - m18
  m1 = 1 / m10
  s7 = s12 - s4
def Learn():
  v12 = heaviside(v1, 1.0)
  m23 = matmul(m1, m18)
  m19 = s19 * m9
  m17 = bcast(v9, axis=0)
  s3 = maximum(s17, s10)
  s9 = s23 * s13
  s22 = cos(s9)
  v9 = get_column(0.326174)
  m10 = heaviside(m0, 1.0)
  m7 = m16 + m20
  s7 = norm(m2)
  m4 = outer(v13, v12)
  s9 = norm(v6)
  v4 = bcast(s3)
  s26 = norm(v18)
  s3 = s3 * s23
  s12 = s13 - s17
  m23 = maximum(m18, m9)
  m23 = maximum(m15, m6)
  s13 = get_scalar(0.883249, 0.32537)
  m12 = matmul(m7, m19)
  v15 = maximum(v1, v29)
  s23 = mean(v20)
  v21 = get_column(0.894599)
  m21 = m4 * m23
  v11 = uniform(-0.203258, 0.717857, n_features)
  v16 = uniform(-0.81229, 0.209246, n_features)
  m23 = bcast(v14, axis=0)
  v6 = uniform(0.209212, -0.83502, n_features)
  s5 = mean(v3)
  s1 = sin(s18)
  s15 = mean(v16)
  m23 = maximum(m22, m10)
  s19 = arccos(s4)
  s7 = minimum(s27, s6)
  v7 = heaviside(v1, 1.0)
  s25 = abs(s2)
  s17 = norm(v29)
  s23 = sin(s16)
  s23 = get_scalar(0.936739, 0.486029)
  m11 = m2 - m5
  m6 = minimum(m0, m8)
 