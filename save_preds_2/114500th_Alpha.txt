def Setup():
  s25 = -0.683006
  v24[0.791766] = 0.505546
  m24[0.0527944, 0.0232275] = -0.826495
  m2 = gaussian(-0.666134, 0.226413, (n_features, n_features))
  v22 = uniform(-0.0981038, 0.245573, n_features)
  s18 = -0.834565
def Predict():
  s1 = get_scalar(0.590019, 0.0144912)
  NoOp()
  m20 = bcast(v8, axis=1)
  s1 = 1 / s25
  s7 = 1 / s20
  s29 = s18 * s24
  s21 = mean(m17)
  s6 = s3 - s7
  s5 = arcsin(s24)
  v23 = v25 / v29
  v17 = v0 * v5
  s11 = TS_rank(s28)
  v28 = v18 * v24
  m20 = m19 - m0
  s13 = exp(s28)
  m24 = m16 / m9
  s8 = abs(s5)
  v25 = s23 * v7
  s11 = get_scalar(0.434154, 0.186938)
  m11 = m19 * m6
  s12 = covariance(v20, v5, 0.715954)
  v27 = maximum(v21, v24)
  m5 = heaviside(m22, 1.0)
  v10 = v27 - v26
  m9 = abs(m18)
  v20 = mean(m20, axis=1)
  v25 = std(m4, axis=1)
  s5 = correlation(v5, v3, 0.513852)
def Learn():
  s14 = std(v14)
  v8 = get_column(0.845027)
  v5 = get_column(0.338139)
  v28 = std(m1, axis=1)
  v11 = v20 * v21
  s28 = mean(v19)
  v15 = v16 + v4
  s27 = std(v12)
  v16 = norm(m12, axis=1)
  m21 = minimum(m2, m16)
  m21 = maximum(m2, m19)
  v10 = norm(m9, axis=1)
  m11 = transpose(m18)
  s7 = tan(s26)
  v7 = v8 * v3
  s25 = minimum(s10, s24)
  s15 = get_scalar(0.17891, 0.961366)
  s12 = covariance(v29, v13, 0.831578)
  m10 = m2 / m13
  v28 = std(m24, axis=1)
  s29 = std(v20)
  s2 = covariance(v3, v4, 0.935879)
  v5 = maximum(v0, v8)
  s28 = exp(s18)
  m19 = heaviside(m0, 1.0)
  s25 = maximum(s13, s23)
  s29 = cos(s13)
  s20 = std(v24)
  s2 = arcsin(s11)
  s23 = cos(s5)
  v8 = heaviside(v6, 1.0)
  m16 = 1 / m16
  s28 = s15 - s28
  m18 = maximum(m17, m24)
  v7 = v18 * v18
  s7 = arctan(s26)
  v23 = uniform(0.761953, 0.00325644, n_features)
  v4 = norm(m19, axis=1)
  v7 = abs(v3)
  s4 = minimum(s25, s21)
  s1 = s24 * s14
  v26 = v29 * v21
 