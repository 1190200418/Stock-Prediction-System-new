def Setup():
  s1 = gaussian(0.0608165, 0.618857)
  m6[0.451567, 0.0774867] = 0.71846
  s10 = gaussian(-0.913941, 0.038511)
  s11 = gaussian(-0.787301, 0.0471688)
  m21 = gaussian(-0.0706724, 0.317955, (n_features, n_features))
  s16 = uniform(0.364179, -0.0840726)
  s2 = uniform(0.320911, 0.106301)
  v18[0.677907] = 0.432766
  v10 = gaussian(0.313152, 0.514099, n_features)
  m4 = uniform(-0.601092, -0.71842, (n_features, n_features))
  s15 = -0.0626093
  s7 = uniform(0.690529, -0.509166)
def Predict():
  s24 = maximum(s17, s9)
  v11 = norm(m8, axis=1)
  s1 = 1 / s25
  v18 = v1 / v2
  s16 = heaviside(s13, 1.0)
  s6 = TS_rank(s10)
  s21 = TS_rank(s0)
  v23 = abs(v12)
  s27 = abs(s26)
  m17 = abs(m22)
  v11 = abs(v12)
  v4 = get_column(0.902606)
  m16 = heaviside(m5, 1.0)
  v21 = dot(m12, v9)
  s18 = get_scalar(0.599771, 0.641118)
  s13 = exp(s28)
  s17 = covariance(v18, v28, 0.40604)
  s14 = s27 + s27
  m13 = bcast(v16, axis=0)
  v13 = std(m14, axis=1)
  s24 = norm(m10)
  s18 = s6 - s13
  v10 = get_row(0.546382)
  s24 = minimum(s23, s18)
  s8 = s8 + s16
  v10 = norm(m4, axis=1)
  s7 = maximum(s14, s10)
  v24 = mean(m10, axis=1)
  s11 = relation_demean(s27)
  v16 = v23 - v15
  s22 = relation_demean(s14)
  v6 = v7 * v18
  s5 = correlation(v5, v3, 0.106052)
  s12 = dot(v15, v15)
  v10 = bcast(s17)
def Learn():
  s14 = std(v22)
  m23 = m22 * m9
  v2 = norm(m11, axis=1)
  v14 = uniform(-0.465062, 0.00668212, n_features)
  v11 = v28 * v21
  m9 = m4 * m23
  v12 = uniform(0.833898, -0.418033, n_features)
  v7 = v8 * v14
  m6 = heaviside(m2, 1.0)
  s11 = norm(m20)
  s4 = heaviside(s26, 1.0)
  s15 = get_scalar(0.17891, 0.961366)
  m16 = m9 + m3
  s21 = covariance(v29, v13, 0.241857)
  v28 = std(m23, axis=1)
  s2 = tan(s17)
  s22 = sin(s2)
  s2 = covariance(v15, v4, 0.935879)
  s12 = abs(s5)
  s25 = maximum(s13, s23)
  s23 = cos(s5)
  m13 = bcast(v21, axis=0)
  v12 = s4 * v19
  v21 = heaviside(v7, 1.0)
  m15 = 1 / m16
  NoOp()
  s6 = get_scalar(0.449179, 0.361915)
  s28 = s15 - s28
  m18 = 1 / m16
  s27 = exp(s28)
  s13 = get_scalar(0.238998, 0.847034)
  s25 = log(s25)
  s10 = dot(v15, v16)
  s27 = s19 + s2
  s7 = arctan(s22)
  v13 = s18 * v23
  s2 = s8 * s14
  s7 = arcsin(s12)
  s19 = exp(s20)
  m20 = matmul(m3, m21)
  s10 = s4 * s3
  v3 = v23 - v21
 