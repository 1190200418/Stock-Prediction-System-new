def Setup():
  s14 = uniform(-0.484921, -0.831694)
  s29 = uniform(-0.609388, 0.697382)
  s16 = -0.158025
  v1 = gaussian(0.694723, 0.0161882, n_features)
  s17 = gaussian(-0.374753, 0.121007)
  s20 = gaussian(-0.294293, 0.253326)
  m6[0.714264, 0.0503568] = -0.0371085
  m22 = uniform(-0.505772, 0.704704, (n_features, n_features))
  m20[0.598181, 0.334768] = 0.905087
  s25 = -0.480308
  s7 = gaussian(0.0548524, 0.775996)
  s5 = gaussian(0.932129, 0.951648)
  s26 = -0.800566
  m22[0.543134, 0.252763] = -0.0619455
  s12 = uniform(-0.230036, 0.977564)
  s13 = -0.0217009
  s1 = uniform(-0.63277, 0.818133)
  v10 = uniform(-0.180165, -0.0657317, n_features)
def Predict():
  s24 = s3 + s3
  s4 = arctan(s20)
  m16 = maximum(m9, m21)
  s17 = relation_demean(s13)
  m19 = bcast(v25, axis=1)
  m4 = m24 * m21
  v16 = bcast(s5)
  s27 = exp(s13)
  s5 = s17 * s16
  s16 = mean(v6)
  v19 = 1 / v3
  s14 = TS_rank(s16)
  s14 = relation_demean(s28)
  m17 = abs(m23)
  m22 = uniform(-0.335198, 0.0434675, (n_features, n_features))
  v15 = v5 * v17
  v3 = maximum(v26, v25)
  m11 = 1 / m15
  m10 = minimum(m24, m23)
  m14 = m19 / m16
  m15 = transpose(m6)
  v12 = norm(m11, axis=0)
  v18 = bcast(s2)
  s1 = tan(s24)
  s13 = dot(v23, v27)
  s4 = arcsin(s19)
  v28 = v11 * v10
  s2 = arcsin(s22)
  v21 = dot(m0, v7)
  s8 = cos(s2)
  s12 = s20 - s23
  v26 = v20 * v21
  s29 = maximum(s22, s25)
  s3 = get_scalar(0.699785, 0.851497)
  v8 = get_row(0.274698)
  v16 = 1 / v4
  v10 = heaviside(v24, 1.0)
  m15 = m5 - m18
  m1 = 1 / m10
  s7 = s12 - s4
def Learn():
  v12 = heaviside(v1, 1.0)
  m23 = matmul(m1, m18)
  m15 = bcast(v3, axis=1)
  m19 = s19 * m9
  m17 = bcast(v9, axis=0)
  s3 = maximum(s17, s10)
  s9 = s23 * s13
  v9 = get_column(0.326174)
  m10 = heaviside(m15, 1.0)
  m7 = m16 + m20
  s7 = norm(m2)
  m4 = outer(v13, v12)
  s9 = norm(v6)
  s7 = std(v4)
  v4 = bcast(s3)
  s26 = norm(v18)
  s3 = s3 * s23
  s12 = s13 - s17
  m23 = maximum(m18, m9)
  s13 = get_scalar(0.865411, 0.32537)
  m6 = bcast(v1, axis=1)
  m12 = matmul(m7, m19)
  v15 = maximum(v1, v29)
  s23 = mean(v20)
  v13 = get_column(0.894599)
  m21 = m4 * m23
  v11 = uniform(-0.203258, 0.717857, n_features)
  v16 = uniform(-0.81229, 0.209246, n_features)
  m23 = bcast(v14, axis=0)
  v6 = uniform(0.209212, -0.83502, n_features)
  s1 = mean(v3)
  s1 = sin(s18)
  s15 = mean(v9)
  m23 = maximum(m22, m10)
  s7 = minimum(s27, s6)
  v7 = heaviside(v1, 1.0)
  s25 = abs(s2)
  s17 = norm(v29)
  s23 = sin(s16)
  s23 = get_scalar(0.936739, 0.486029)
  m11 = m2 - m5
  m6 = minimum(m0, m8)
  v26 = v8 / v6
 