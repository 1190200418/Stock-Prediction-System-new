def Setup():
  s26 = gaussian(-0.343518, 0.103802)
  s4 = 0.569633
  s5 = 0.391098
  s12 = 0.714092
  m20 = gaussian(-0.947536, 0.488989, (n_features, n_features))
  v23[0.677724] = -0.289349
  s24 = -0.658629
def Predict():
  v16 = maximum(v13, v26)
  v15 = norm(m5, axis=1)
  m12 = maximum(m10, m14)
  s26 = s14 + s28
  v28 = s28 * v4
  v23 = bcast(s28)
  v19 = norm(m0, axis=1)
  s29 = tan(s23)
  m23 = abs(m19)
  s18 = s19 * s15
  s3 = cos(s29)
  s6 = s17 - s19
  v14 = 1 / v1
  m7 = m22 - m10
  v3 = TS_row_rank(s22)
  v17 = dot(m9, v19)
  s23 = covariance(v28, v20, 0.653939)
  s19 = relation_rank(s12)
  v4 = dot(m13, v21)
  m17 = transpose(m9)
  s1 = tan(s6)
  m21 = m12 + m19
  s23 = TS_rank(s0)
  m7 = matmul(m12, m13)
  s13 = minimum(s4, s25)
  s15 = std(m3)
  s12 = 1 / s4
  s8 = tan(s29)
  v2 = norm(m14, axis=0)
  s29 = s5 / s6
  s28 = s4 - s17
  m18 = s19 * m2
  m3 = outer(v6, v24)
  v10 = minimum(v26, v5)
  m22 = m9 / m20
  s17 = norm(m15)
  v14 = norm(m8, axis=1)
  v20 = abs(v2)
  s6 = minimum(s25, s1)
  m19 = m16 / m6
  m24 = maximum(m13, m15)
  s19 = arccos(s4)
  s19 = get_scalar(0.950129, 0.298653)
  s23 = relation_rank(s2)
  m13 = heaviside(m18, 1.0)
  m8 = transpose(m4)
  m23 = bcast(v6, axis=0)
  v14 = v21 + v25
  m3 = maximum(m24, m6)
  v17 = dot(m16, v5)
  s9 = arcsin(s11)
  m12 = m12 / m6
def Learn():
  NoOp()
  s20 = std(v27)
  s19 = exp(s26)
  m8 = m5 / m12
  m24 = bcast(v11, axis=1)
  s14 = correlation(v28, v24, 0.821673)
  m22 = m20 - m16
  s22 = arctan(s0)
  m21 = uniform(0.475541, 0.658314, (n_features, n_features))
  s16 = correlation(v7, v1, 0.405465)
  s17 = mean(v19)
  s28 = get_scalar(0.304351, 0.054291)
  m9 = minimum(m0, m18)
 