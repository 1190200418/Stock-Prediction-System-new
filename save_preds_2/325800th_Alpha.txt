def Setup():
  v26 = uniform(0.599944, -0.134183, n_features)
  s7 = 0.848156
def Predict():
  s20 = heaviside(s1, 1.0)
  s7 = heaviside(s25, 1.0)
  m11 = matmul(m6, m21)
  s4 = heaviside(s28, 1.0)
  m21 = abs(m13)
  m12 = maximum(m19, m11)
  s26 = s14 + s28
  s8 = sin(s2)
  v19 = norm(m0, axis=1)
  s25 = s2 * s2
  v23 = heaviside(v18, 1.0)
  s9 = s7 - s7
  s6 = s17 - s19
  v8 = abs(v25)
  m1 = transpose(m19)
  m8 = heaviside(m11, 1.0)
  s22 = s15 * s13
  v27 = get_row(0.769603)
  s14 = get_scalar(0.913465, 0.94596)
  s4 = minimum(s21, s27)
  s12 = relation_rank(s12)
  s15 = arctan(s25)
  s1 = tan(s6)
  m20 = minimum(m2, m17)
  s2 = s20 - s4
  v18 = get_row(0.254329)
  m21 = m9 + m3
  s15 = TS_rank(s0)
  s13 = minimum(s3, s25)
  s19 = tan(s24)
  s27 = norm(v3)
  s29 = s11 / s6
  s18 = std(v2)
  s17 = arcsin(s14)
  s23 = tan(s2)
  v11 = s3 * v5
  s3 = dot(v4, v9)
  m2 = minimum(m1, m2)
  m19 = m6 / m6
  s1 = s1 / s14
  m3 = heaviside(m15, 1.0)
  s17 = cos(s3)
  s22 = arctan(s27)
  m24 = maximum(m6, m15)
  v3 = minimum(v21, v28)
  v5 = uniform(0.40177, -0.111175, n_features)
  s19 = arccos(s22)
  s19 = get_scalar(0.950129, 0.298653)
  m19 = bcast(v21, axis=0)
  m8 = transpose(m4)
  m13 = maximum(m24, m2)
  s2 = TS_rank(s25)
  NoOp()
  v14 = dot(m4, v20)
  s6 = get_scalar(0.298991, 0.308021)
  v3 = v12 + v25
  v6 = TS_row_rank(s2)
  v9 = v16 - v2
  m10 = maximum(m8, m6)
  s12 = relation_demean(s8)
  m12 = m12 / m6
def Learn():
  s12 = maximum(s17, s7)
  s26 = tan(s26)
  m12 = maximum(m1, m17)
  m13 = s3 * m22
  s1 = std(m16)
  s19 = exp(s26)
  s13 = cos(s16)
  s11 = minimum(s23, s4)
  s29 = heaviside(s18, 1.0)
  s10 = exp(s25)
  v17 = norm(m14, axis=0)
  v8 = heaviside(v15, 1.0)
  v21 = minimum(v15, v24)
  s5 = arctan(s11)
  v17 = v29 / v4
  v29 = std(m23, axis=1)
  v12 = abs(v12)
  v22 = minimum(v27, v19)
  m10 = minimum(m19, m18)
  s14 = s0 - s8
  s17 = mean(v19)
  s13 = tan(s11)
  s28 = get_scalar(0.304351, 0.054291)
  s11 = s0 / s8
 