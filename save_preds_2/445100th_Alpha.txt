def Setup():
  v18 = uniform(-0.670463, 0.330741, n_features)
  v9 = gaussian(0.472674, 0.0899342, n_features)
def Predict():
  v10 = v13 + v21
  v12 = norm(m6, axis=0)
  v5 = bcast(s11)
  m24 = heaviside(m6, 1.0)
  m4 = maximum(m1, m6)
  s11 = correlation(v22, v19, 0.902766)
  s29 = cos(s22)
  s22 = 1 / s4
  s20 = arctan(s7)
  m16 = heaviside(m12, 1.0)
  s29 = abs(s14)
  v16 = v26 + v6
  v26 = v0 / v28
  v19 = mean(m19, axis=1)
  v12 = mean(m8, axis=1)
  v19 = norm(m0, axis=1)
  m3 = maximum(m3, m3)
  m16 = m2 - m10
  v1 = v20 - v19
  m9 = abs(m10)
  v28 = v24 - v8
  m22 = uniform(-1.26561, 0.25407, (n_features, n_features))
  m18 = m1 - m10
  s6 = s17 - s19
  s18 = TS_rank(s19)
  s7 = sin(s17)
  s16 = correlation(v21, v27, 0.438334)
  s25 = sin(s21)
  s19 = arctan(s8)
  s21 = maximum(s15, s22)
  s27 = minimum(s7, s27)
  m4 = m22 / m6
  s13 = previous_rank(s8)
  s7 = relation_rank(s2)
  m16 = outer(v26, v28)
  s1 = tan(s6)
  s16 = 1 / s9
  m23 = m14 / m24
  s8 = tan(s24)
  s11 = abs(s3)
  s29 = log(s28)
  s1 = s1 / s28
  v15 = norm(m10, axis=1)
  m4 = matmul(m9, m19)
  v27 = heaviside(v12, 1.0)
  s16 = 1 / s12
  v23 = 1 / v19
  s19 = get_scalar(0.950129, 0.298653)
  m3 = m15 + m12
  s9 = std(v24)
  v18 = v24 - v1
  m18 = 1 / m11
  s6 = abs(s25)
  v26 = uniform(0.110047, -0.85411, n_features)
  m10 = outer(v17, v22)
  m15 = maximum(m10, m24)
  v17 = v15 - v25
  v7 = uniform(0.469164, 0.503957, n_features)
  v12 = minimum(v12, v11)
  v11 = maximum(v17, v20)
def Learn():
  s19 = exp(s4)
  v13 = abs(v11)
  v15 = v22 / v21
  v20 = v1 / v29
  s28 = maximum(s28, s4)
  NoOp()
  s18 = get_scalar(0.344203, 0.628018)
  s9 = abs(s27)
  s12 = std(v3)
  s3 = exp(s14)
  s20 = norm(m4)
  v27 = get_column(0.648543)
  m18 = minimum(m22, m4)
  v29 = std(m23, axis=1)
  s7 = log(s11)
  m1 = uniform(-0.711025, 0.308675, (n_features, n_features))
  m3 = matmul(m7, m24)
  s3 = abs(s17)
  v22 = bcast(s27)
  s23 = s17 / s20
  m20 = bcast(v10, axis=1)
  v6 = minimum(v18, v10)
  m16 = 1 / m15
  v22 = get_row(0.462516)
  m6 = bcast(v17, axis=1)
  v29 = mean(m7, axis=1)
  m13 = m14 - m20
  m9 = m12 - m9
  s4 = s16 - s9
  s17 = mean(v19)
  m24 = uniform(-0.972763, -0.721689, (n_features, n_features))
  v11 = s7 * v11
  m9 = m9 * m10
  m21 = minimum(m10, m5)
  s4 = get_scalar(0.304351, 0.0290507)
  s22 = s23 / s26
 