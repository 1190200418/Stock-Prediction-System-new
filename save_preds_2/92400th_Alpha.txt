def Setup():
  s27 = uniform(-0.542678, 0.863531)
  s17 = 0.387281
  s26 = gaussian(0.0539916, 0.679828)
  m17 = uniform(-0.0205618, 0.910348, (n_features, n_features))
  s23 = uniform(-0.623371, -0.552681)
  m19 = uniform(0.79427, 0.960661, (n_features, n_features))
  v9 = gaussian(-0.811375, 0.83551, n_features)
  v17[0.229001] = 0.635794
def Predict():
  s24 = s19 + s3
  m16 = m4 - m9
  m4 = s2 * m0
  v13 = v1 + v2
  v2 = bcast(s26)
  m24 = m2 + m9
  v23 = 1 / v5
  m2 = bcast(v27, axis=0)
  m17 = abs(m10)
  v16 = dot(m14, v25)
  s14 = dot(v27, v12)
  s17 = sin(s4)
  s7 = cos(s21)
  v9 = get_row(0.266353)
  v13 = uniform(-0.0580569, -0.0355946, n_features)
  s19 = get_scalar(0.711023, 0.357329)
  m22 = uniform(-0.904617, 0.0601628, (n_features, n_features))
  v21 = dot(m6, v4)
  v21 = minimum(v14, v29)
  s1 = tan(s24)
  s23 = norm(v18)
  v18 = v11 * v10
  m1 = minimum(m18, m1)
  s4 = std(m14)
  s29 = arcsin(s3)
  s13 = mean(m23)
  m17 = m4 * m24
  v21 = v7 - v26
  s16 = 1 / s23
  s24 = minimum(s3, s5)
  s12 = s20 - s2
  s3 = get_scalar(0.699785, 0.851497)
  v17 = mean(m9, axis=1)
  m20 = maximum(m4, m12)
  s8 = exp(s15)
  s16 = TS_rank(s24)
  v28 = uniform(-0.494298, -0.594965, n_features)
def Learn():
  v17 = norm(m10, axis=1)
  s4 = arccos(s23)
  m10 = bcast(v21, axis=0)
  m13 = m3 / m12
  v11 = v11 - v1
  s16 = arccos(s10)
  s19 = std(v9)
  v5 = heaviside(v13, 1.0)
  s5 = s15 + s19
  v16 = abs(v2)
  v6 = mean(m16, axis=1)
  v4 = minimum(v0, v27)
  v8 = dot(m22, v7)
  m16 = m20 - m0
  s16 = covariance(v17, v19, 0.233764)
  v1 = minimum(v16, v17)
  s1 = get_scalar(0.603185, 0.993454)
  s27 = sin(s26)
  v24 = v17 - v6
  m16 = abs(m11)
  s15 = minimum(s0, s20)
  s13 = 1 / s11
  v13 = maximum(v6, v23)
  v19 = maximum(v2, v14)
  s18 = tan(s15)
  s21 = mean(v29)
  m2 = abs(m4)
  v14 = minimum(v25, v17)
  s25 = s27 * s10
  s24 = exp(s24)
  s3 = tan(s8)
  s3 = norm(v24)
  s8 = mean(v7)
  s16 = 1 / s28
  s2 = std(v28)
 