def Setup():
  s13 = gaussian(0.16342, 0.916372)
  s26 = -0.289265
  m1 = gaussian(-0.503454, 0.126056, (n_features, n_features))
  v2 = uniform(0.175585, -0.324335, n_features)
  s22 = gaussian(0.392844, 0.132621)
  m12 = gaussian(-0.387281, 0.325931, (n_features, n_features))
  s28 = -0.0853505
  s1 = gaussian(-0.977414, 0.908597)
  v21[0.409454] = 0.648006
  m4[0.0289633, 0.330104] = -0.929662
  v21[0.0752956] = 0.576966
def Predict():
  s21 = exp(s21)
  m16 = bcast(v17, axis=0)
  s28 = get_scalar(0.197182, 0.93282)
  m4 = m16 + m17
  v19 = get_column(0.367994)
  s17 = get_scalar(0.227814, 0.279471)
  v1 = norm(m14, axis=0)
  v9 = TS_row_rank(s16)
  v27 = minimum(v10, v2)
  v29 = v13 * v15
  s12 = mean(m16)
  s20 = 1 / s27
  s19 = abs(s24)
  s11 = s9 / s17
  s10 = correlation(v5, v8, 0.835554)
  m17 = m19 + m7
  m18 = 1 / m4
  s28 = arctan(s28)
  NoOp()
  m21 = heaviside(m7, 1.0)
  s28 = s28 - s3
  m24 = outer(v13, v12)
  m14 = m22 * m14
  v8 = bcast(s28)
  v21 = norm(m18, axis=1)
  v1 = v11 + v17
  s4 = log(s11)
  m15 = m15 / m19
  s15 = s25 * s5
  s18 = cos(s13)
  s7 = previous_rank(s3)
  s13 = get_scalar(0.799082, 0.893172)
  s14 = relation_demean(s7)
  s10 = 1 / s3
  s7 = cos(s19)
  m23 = m8 - m12
  v3 = norm(m21, axis=0)
  m1 = m17 * m22
  s1 = TS_rank(s28)
  m2 = m0 + m4
  v18 = get_row(0.0211333)
  m10 = uniform(-0.166868, -0.441046, (n_features, n_features))
  s14 = sin(s10)
  s22 = TS_rank(s4)
  s12 = relation_rank(s15)
  v5 = maximum(v17, v23)
  m7 = abs(m9)
  m20 = abs(m22)
  s17 = relation_demean(s27)
  s6 = s13 - s0
  m3 = minimum(m7, m19)
  v13 = heaviside(v2, 1.0)
  s26 = s27 * s2
  s8 = arctan(s22)
  s20 = tan(s3)
  s17 = 1 / s7
  s3 = s26 - s18
  s5 = sin(s8)
  s5 = covariance(v18, v16, 0.437102)
  m2 = heaviside(m12, 1.0)
  s26 = log(s28)
  m3 = bcast(v28, axis=0)
  s20 = cos(s12)
  v22 = get_column(0.338294)
  s3 = tan(s3)
  s2 = heaviside(s10, 1.0)
  v7 = maximum(v16, v21)
  s18 = covariance(v9, v6, 0.683366)
  m16 = s13 * m5
def Learn():
  s26 = get_scalar(0.262969, 0.943432)
  s14 = mean(v25)
  v8 = get_row(0.733037)
  s24 = mean(v18)
  v15 = get_column(0.652101)
  v24 = v14 * v18
  m11 = maximum(m23, m16)
  v27 = bcast(s15)
  v10 = abs(v5)
  s7 = mean(m17)
  m3 = matmul(m4, m16)
  m14 = abs(m22)
  s13 = s9 * s1
  s15 = s17 - s29
  s12 = get_scalar(0.895938, 0.170148)
  v3 = dot(m12, v0)
  s2 = s26 + s22
  s28 = std(v12)
  s7 = minimum(s10, s20)
  NoOp()
  s9 = cos(s20)
  m17 = abs(m4)
  s8 = heaviside(s28, 1.0)
  v1 = get_column(0.355793)
  m24 = m10 / m8
  v22 = v18 + v6
  s22 = std(m13)
  m10 = abs(m13)
  m5 = m20 + m3
  s17 = s25 - s28
  s10 = s24 / s19
 