def Setup():
  m9[0.524297, 0.702285] = 0.11923
  s11 = -0.138275
  v22 = uniform(0.0961984, -0.149573, n_features)
  m23 = uniform(0.758828, -0.221883, (n_features, n_features))
  s27 = 0.696112
  m12 = uniform(-0.350536, 0.335261, (n_features, n_features))
  v25 = gaussian(0.391927, 0.716772, n_features)
def Predict():
  s15 = s11 - s22
  m15 = matmul(m6, m14)
  m22 = maximum(m6, m0)
  s1 = dot(v1, v0)
  v21 = v12 * v28
  m2 = abs(m12)
  v6 = dot(m1, v27)
  s24 = relation_demean(s26)
  m20 = bcast(v28, axis=1)
  s21 = maximum(s1, s7)
  m5 = bcast(v23, axis=1)
  s12 = s19 + s21
  v16 = v26 + v28
  v10 = mean(m4, axis=1)
  m17 = m14 + m15
  s22 = arccos(s5)
  v1 = uniform(-0.641888, 0.699278, n_features)
  s3 = dot(v27, v17)
  v14 = std(m3, axis=1)
  v19 = norm(m0, axis=1)
  v1 = v1 - v22
  s13 = covariance(v9, v16, 0.295811)
  v2 = s25 * v15
  v28 = v5 - v2
  s5 = mean(v18)
  v7 = norm(m20, axis=1)
  m23 = uniform(-1.26561, 0.270798, (n_features, n_features))
  v5 = norm(m1, axis=0)
  s6 = s17 - s19
  NoOp()
  s20 = std(m17)
  m19 = uniform(0.507779, 0.89143, (n_features, n_features))
  v2 = mean(m16, axis=1)
  s15 = norm(m4)
  m2 = m11 + m24
  m18 = matmul(m10, m1)
  v3 = dot(m12, v2)
  v26 = norm(m22, axis=0)
  s20 = TS_rank(s26)
  s21 = abs(s12)
  s1 = tan(s6)
  s25 = norm(m1)
  m23 = m14 / m24
  s29 = exp(s23)
  v4 = norm(m6, axis=0)
  s1 = s1 / s28
  m4 = matmul(m9, m10)
  m2 = s18 * m19
  s19 = get_scalar(0.950129, 0.298653)
  s17 = relation_demean(s4)
  m4 = m18 / m21
  m24 = abs(m24)
  m17 = abs(m9)
  v13 = dot(m24, v22)
  v28 = get_column(0.723299)
  v6 = bcast(s12)
  s2 = minimum(s11, s9)
  m4 = abs(m5)
  m7 = m9 * m13
  m12 = s1 * m19
  s3 = abs(s25)
  v1 = maximum(v10, v15)
  v18 = std(m4, axis=1)
  v17 = v4 - v1
  v26 = get_row(0.105788)
  v29 = mean(m16, axis=1)
  v7 = uniform(0.469164, 0.503957, n_features)
  s20 = dot(v7, v12)
  s16 = mean(v12)
  NoOp()
def Learn():
  s12 = heaviside(s2, 1.0)
  v22 = abs(v8)
  s19 = exp(s4)
  s4 = log(s21)
  s29 = s10 * s14
  m16 = heaviside(m12, 1.0)
  v9 = dot(m22, v28)
  v17 = v13 * v2
  s26 = covariance(v26, v13, 0.683466)
  m23 = bcast(v14, axis=0)
  v7 = v11 / v28
  v3 = dot(m12, v18)
  v24 = mean(m12, axis=1)
  v24 = s23 * v1
  v15 = v8 - v13
  m11 = abs(m12)
  m1 = bcast(v26, axis=1)
  s28 = maximum(s28, s4)
  s27 = get_scalar(0.392782, 0.743568)
  NoOp()
  m16 = uniform(0.0467991, -0.981852, (n_features, n_features))
  s27 = std(v29)
  v23 = get_column(0.0921433)
  s9 = norm(v12)
  s14 = abs(s14)
  s1 = s1 + s19
  m8 = m17 * m1
  s22 = std(v2)
  s2 = std(m19)
  s24 = s18 - s9
  v26 = v29 * v13
  m18 = heaviside(m23, 1.0)
  s17 = mean(v19)
  s12 = s13 * s28
  m14 = uniform(-0.857037, -0.950735, (n_features, n_features))
  s4 = get_scalar(0.288936, 0.0290507)
  v16 = norm(m6, axis=1)
  NoOp()
  s20 = s7 / s9
  v12 = v13 - v27
  s4 = arcsin(s4)
  v22 = bcast(s21)
  m13 = outer(v12, v22)
  m18 = m12 + m1
 