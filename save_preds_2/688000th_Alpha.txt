def Setup():
  v22 = uniform(0.819482, 0.135681, n_features)
  s27 = 0.738496
  v29 = uniform(0.397224, -0.291656, n_features)
  v9 = uniform(0.19669, 0.609844, n_features)
  s3 = 0.950223
  v6[0.441119] = -0.851059
  m19 = uniform(-0.425602, 0.161822, (n_features, n_features))
  v17 = gaussian(-0.389802, 0.23533, n_features)
  s2 = uniform(-0.562418, -0.780343)
  s8 = gaussian(0.697618, 0.581959)
def Predict():
  s14 = maximum(s13, s12)
  s18 = norm(v24)
  s5 = log(s8)
  m6 = abs(m3)
  s27 = s7 * s21
  v22 = abs(v20)
  s9 = minimum(s17, s6)
  m8 = s29 * m22
  m19 = heaviside(m13, 1.0)
  s9 = relation_demean(s19)
  s21 = std(m22)
  s4 = cos(s24)
  s19 = std(m0)
  s29 = TS_rank(s8)
  m14 = 1 / m24
  s12 = arctan(s17)
  s1 = arcsin(s27)
  s13 = sin(s25)
  s19 = correlation(v0, v22, 0.365692)
  s11 = arcsin(s28)
  s4 = heaviside(s15, 1.0)
  m13 = minimum(m15, m12)
  s10 = dot(v17, v13)
  m6 = heaviside(m16, 1.0)
  s8 = 1 / s29
  s1 = minimum(s12, s8)
  s1 = arctan(s1)
  v9 = abs(v27)
  m15 = m0 / m22
  v5 = norm(m16, axis=1)
  v28 = uniform(0.290917, -0.770087, n_features)
  s17 = arctan(s19)
  s20 = relation_demean(s23)
  m18 = m20 * m13
  m10 = matmul(m18, m11)
  s17 = s29 * s22
  v14 = v7 - v2
  s17 = cos(s26)
  s17 = sin(s17)
  m5 = matmul(m0, m24)
  NoOp()
  m23 = heaviside(m11, 1.0)
  s17 = 1 / s17
  s18 = std(v6)
  s7 = arccos(s26)
  m7 = m23 + m0
  s29 = covariance(v13, v21, 0.69302)
  s26 = norm(v20)
  v25 = v5 * v9
  s21 = norm(v24)
  m12 = m6 - m7
  s19 = cos(s29)
  s10 = mean(m8)
  s3 = heaviside(s21, 1.0)
  s8 = arcsin(s26)
def Learn():
  s26 = get_scalar(0.563724, 0.518887)
  v22 = v29 / v27
  m4 = bcast(v20, axis=0)
  m24 = heaviside(m2, 1.0)
  s6 = abs(s20)
  v8 = v22 * v23
  v20 = get_row(0.569573)
  v17 = norm(m15, axis=1)
  s12 = std(v10)
  s29 = mean(m23)
  s28 = maximum(s15, s9)
  m12 = m20 * m0
  m1 = uniform(-0.698113, -0.95532, (n_features, n_features))
  v14 = mean(m24, axis=1)
  s21 = s29 / s17
  s24 = s8 / s14
  v18 = heaviside(v18, 1.0)
  s22 = norm(v5)
  v19 = uniform(0.530096, -0.828297, n_features)
  s19 = s3 - s5
  s3 = tan(s17)
  m16 = abs(m2)
  m6 = minimum(m0, m1)
  s15 = minimum(s26, s8)
  v14 = uniform(-0.772633, -0.245628, n_features)
  s23 = arcsin(s0)
  v11 = norm(m16, axis=0)
  m20 = transpose(m8)
  m1 = heaviside(m23, 1.0)
  m5 = maximum(m19, m15)
  s12 = std(v16)
  s8 = exp(s8)
  m4 = heaviside(m23, 1.0)
  m15 = heaviside(m11, 1.0)
  s20 = mean(v28)
  m6 = abs(m20)
  v3 = v26 + v4
  s20 = arccos(s20)
  m2 = m21 / m23
  s27 = mean(m10)
  m13 = s4 * m0
  v3 = get_column(0.950781)
  s21 = norm(v0)
  m7 = s2 * m4
 