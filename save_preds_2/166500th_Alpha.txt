def Setup():
  v1 = uniform(0.844582, 0.215511, n_features)
  v6 = gaussian(-0.793538, 0.417344, n_features)
  s3 = 0.331751
  s18 = gaussian(-0.130229, 0.937068)
  s8 = gaussian(0.764344, 0.315702)
  m20[0.753694, 0.224101] = 0.309437
def Predict():
  s26 = s3 + s28
  m12 = transpose(m14)
  s18 = log(s0)
  v19 = norm(m0, axis=1)
  s6 = tan(s7)
  v16 = TS_row_rank(s18)
  s6 = s17 - s19
  s2 = 1 / s11
  NoOp()
  m4 = m0 / m24
  s22 = previous_rank(s16)
  m24 = m18 + m15
  s13 = cos(s12)
  s2 = arcsin(s7)
  s8 = cos(s21)
  s1 = tan(s6)
  v27 = std(m22, axis=1)
  v27 = v17 * v18
  s23 = TS_rank(s12)
  s21 = norm(m10)
  m22 = uniform(-0.399059, 0.029304, (n_features, n_features))
  v25 = 1 / v25
  m20 = heaviside(m17, 1.0)
  s5 = log(s13)
  s2 = arccos(s20)
  s8 = abs(s21)
  s25 = s14 / s3
  s28 = exp(s15)
  v20 = dot(m3, v9)
  v28 = bcast(s13)
  v3 = mean(m4, axis=1)
  s17 = log(s23)
  v11 = v28 * v8
  NoOp()
  s15 = dot(v7, v17)
  s5 = relation_rank(s7)
  s24 = TS_rank(s14)
  v2 = v3 / v12
  s29 = exp(s0)
  s28 = sin(s14)
  v29 = heaviside(v10, 1.0)
  m6 = outer(v12, v4)
  s14 = relation_rank(s13)
  v6 = norm(m11, axis=1)
  s8 = mean(m17)
  s27 = 1 / s13
  s25 = get_scalar(0.954691, 0.359607)
  v25 = v17 - v16
  s11 = mean(v21)
  v15 = TS_row_rank(s19)
  s14 = TS_rank(s5)
  s16 = norm(m8)
  v6 = get_column(0.97762)
  s25 = get_scalar(0.676884, 0.727802)
  m3 = s9 * m6
  s19 = exp(s26)
  v9 = abs(v5)
  s19 = get_scalar(0.950129, 0.237406)
  v16 = heaviside(v16, 1.0)
  m12 = bcast(v26, axis=0)
def Learn():
  s18 = norm(v2)
  s15 = abs(s6)
  s19 = exp(s26)
  v1 = mean(m11, axis=1)
  m24 = transpose(m0)
  s12 = mean(v23)
  m14 = maximum(m11, m13)
  s14 = maximum(s21, s3)
  m6 = 1 / m20
  s15 = covariance(v16, v6, 0.372936)
  v8 = norm(m1, axis=1)
  s5 = sin(s28)
  m9 = transpose(m20)
  s1 = arctan(s17)
  s12 = exp(s6)
  s1 = s1 + s18
  s17 = mean(v19)
  v21 = maximum(v9, v9)
  s13 = covariance(v16, v26, 0.67623)
  m18 = m6 - m10
  v13 = dot(m9, v2)
  v28 = uniform(0.91218, -0.646211, n_features)
  v13 = get_column(0.674344)
  s28 = get_scalar(0.255323, 0.0775349)
  v16 = heaviside(v9, 1.0)
  v15 = std(m13, axis=1)
  v18 = mean(m7, axis=1)
 